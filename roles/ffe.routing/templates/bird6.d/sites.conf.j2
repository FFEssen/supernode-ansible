filter site_out {
  if DRAINED = 1 then reject;
  if is_default_route() then accept;

  reject;
};

template bgp ibgp_site {
  local as {{own_as}};
  import all;
  export filter site_out;
  next hop self;
  import keep filtered;
};

{% for site in sites %}
{% if site.bgp is defined %}
{% if openvpn is defined %}
protocol bgp {{ site.bgp.name }}_ovpn from ibgp_site {
  neighbor {{ openvpn.ipv6.server_net | ipaddr('net') | ipaddr(site.id) | ipaddr('address') }} as {{ own_as }};
  default bgp_med 10;
};
{% endif %}

{% if tunneldigger is defined %}
protocol bgp {{site.bgp.name}}_l2tp from ibgp_site {
  neighbor {{ tunneldigger.ipv6.server_net | ipsubnet(64, site.id) | ipaddr(2) | ipaddr('address') }} as {{ own_as }};
};
{% endif %}

{% endif %}
{% endfor %}
