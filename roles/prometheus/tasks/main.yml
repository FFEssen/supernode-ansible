- name: Ensure config dir exists
  ansible.builtin.file:
    name: /etc/prometheus
    state: directory
    owner: root
    mode: "0755"

- name: Ensure data dir exists
  ansible.builtin.file:
    name: /var/prometheus
    state: directory
    owner: nobody
    mode: "0755"

- name: Ensure target group dir exists
  ansible.builtin.file:
    name: /etc/prometheus/tgroups
    state: directory
    owner: nobody
    mode: "0755"

- name: Configure prometheus
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/prometheus
    owner: root
    mode: "0644"
  with_items:
    - prometheus.yml
    - alerts.rules.yml
    - recording.rules.yml
  notify: Restart prometheus

- name: Configure prometheus
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/prometheus/tgroups/{{ item }}.yml"
    owner: root
    mode: "0644"
  with_items:
    - snmp_city
    - snmp_dsl_sites
    - node_bb
    - node_supernodes
    - bird_bb
    - bird_supernodes

- name: Ensure docker container is running
  community.general.docker_container:
    name: prometheus
    image: prom/prometheus
    state: started
    pull: true
    volumes:
      - "/var/prometheus:/prometheus"
      - "/etc/prometheus:/etc/prometheus"
    ports:
      - "9090:9090"
    restart_policy: always
    command: "--web.external-url=https://{{ prometheus.fqdn }} --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.retention.time=90d --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles --web.enable-lifecycle"
